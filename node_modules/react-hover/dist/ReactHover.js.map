{"version":3,"sources":["../src/ReactHover.js"],"names":["ReactHover","props","state","children","object","hoverComponentStyle","display","position","item","index","type","name","childrenWithProps","child","push","cloneElement","setVisibility","bind","getCursorPos","styles","map","renderItem","flag","updatedStyles","setState","e","cursorX","pageX","cursorY","pageY","options","followCursor","shiftX","shiftY","isNaN","top","left","propTypes","array","isRequired","className","string","Trigger","Hover"],"mappings":"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","file":"ReactHover.js","sourcesContent":["import React, { Component } from 'react'\nimport Hover from './lib/Hover'\nimport Trigger from './lib/Trigger'\nimport PropTypes from 'prop-types'\n\nclass ReactHover extends Component {\n  static propTypes = {\n    children: PropTypes.array.isRequired,\n    options: PropTypes.object.isRequired,\n    className: PropTypes.string\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      children: PropTypes.object,\n      hoverComponentStyle: {\n        display: 'none',\n        position: 'absolute'\n      }\n    }\n  }\n\n  renderItem(item, index) {\n    if (item.type.name == 'Trigger') {\n      return (\n        <Trigger key={index}>\n          {item}\n        </Trigger>\n      )\n    } else if (item.type.name == 'Hover') {\n      return (\n        <Hover key={index}>\n          {item}\n        </Hover>\n      )\n    }\n  }\n\n  render() {\n    const { hoverComponentStyle } = this.state\n    let childrenWithProps = [];\n    for (let child of this.props.children) {\n      if (child.type.name == 'Trigger') {\n        childrenWithProps.push(React.cloneElement(child, {\n          setVisibility: this.setVisibility.bind(this),\n          getCursorPos: this.getCursorPos.bind(this)\n        }));\n      } else if (child.type.name == 'Hover') {\n        childrenWithProps.push(React.cloneElement(child, {\n          styles: hoverComponentStyle\n        }));\n      }\n    }\n\n    return (\n      <div>\n        {childrenWithProps.map((item, index) => this.renderItem(item, index))}\n      </div>\n    )\n  }\n\n  setVisibility(flag) {\n    let { hoverComponentStyle } = this.state\n    let updatedStyles = null\n    if (flag) {\n      updatedStyles = { ...hoverComponentStyle, display: 'block' }\n    } else {\n      updatedStyles = { ...hoverComponentStyle, display: 'none' }\n    }\n    this.setState({\n      hoverComponentStyle: updatedStyles\n    })\n  }\n\n  getCursorPos(e) {\n    const cursorX = e.pageX\n    const cursorY = e.pageY\n    let { options: { followCursor, shiftX, shiftY } } = this.props\n    let { hoverComponentStyle } = this.state\n    let updatedStyles = null\n    if (!followCursor) {\n      return\n    }\n    if (isNaN(shiftX)) {\n      shiftX = 0\n    }\n    if (isNaN(shiftY)) {\n      shiftY = 0\n    }\n    updatedStyles = { ...hoverComponentStyle, top: cursorY + shiftY, left: cursorX + shiftX }\n    this.setState({\n      hoverComponentStyle: updatedStyles\n    })\n  }\n}\n\nReactHover.Trigger = Trigger;\nReactHover.Hover = Hover;\n\nexport default ReactHover;\n"]}